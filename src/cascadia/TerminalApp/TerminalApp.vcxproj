<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\..\common.openconsole.props" Condition="'$(OpenConsoleDir)'==''" />
  <PropertyGroup>
    <!-- cppwinrt.build.pre.props depends on these settings: -->
    <!-- build a dll, not exe (Application) -->
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <SubSystem>Console</SubSystem>
    <!-- sets a bunch of Windows Universal properties -->
    <OpenConsoleUniversalApp>true</OpenConsoleUniversalApp>
  </PropertyGroup>
  <Import Project="$(OpenConsoleDir)src\cppwinrt.build.pre.props" />
  <PropertyGroup Label="Globals">
    <ProjectGuid>{CA5CAD1A-44BD-4AC7-AC72-F16E576FDD12}</ProjectGuid>
    <ProjectName>TerminalApp</ProjectName>
    <RootNamespace>TerminalApp</RootNamespace>
  </PropertyGroup>

  <!-- ========================= XAML files ======================== -->
  <ItemGroup>
    <!-- HERE BE DRAGONS:
      For any types that use XAML information, if their .idl and .h aren't
      marked DependentUpon the corresponding .xaml file, XamlTypeInfo.g.h won't
      pick it up correctly. -->
    <!-- <ApplicationDefinition Include="App.xaml">
      <SubType>Designer</SubType>
    </ApplicationDefinition> -->
  </ItemGroup>
  <!-- When we add other user controls, they should go in here as so: -->
  <!-- <ItemGroup>
    <Page Include="MyUserControl.xaml">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup> -->

  <!-- ========================= Headers ======================== -->
  <ItemGroup>
    <!-- Only put headers for winrt types in here, and make sure they're
    DependentUpon the appropriate idl/xaml files. If you don't, they won't be
    included in XamlTypeInfo.g.* correctly! Don't put other header files in
    here - put them in TerminalAppLib.vcxproj instead! -->
    <ClInclude Include="pch.h" />
    <ClInclude Include="AppKeyBindings.h" />
    <ClInclude Include="App.h" />
    <!-- <ClInclude Include="AppKeyBindings.h">
      <DependentUpon>AppKeyBindings.idl</DependentUpon>
    </ClInclude> -->
    <!-- <ClInclude Include="App.h">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude> -->
  </ItemGroup>

  <!-- ========================= Cpp Files ======================== -->
  <ItemGroup>
    <!-- Don't put source files in here - put them in TerminalAppLib.vcxproj instead! -->
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <!-- <ClCompile Include="$(GeneratedFilesDir)module.g.cpp" /> -->
  </ItemGroup>

  <!-- ========================= idl Files ======================== -->
  <ItemGroup>
    <!-- <Midl Include="App.idl">
      <DependentUpon>App.xaml</DependentUpon>
    </Midl> -->
    <!-- <Midl Include="AppKeyBindings.idl" /> -->
  </ItemGroup>

  <!-- ========================= Misc Files ======================== -->
  <ItemGroup>
    <None Include="packages.config" />
    <None Include="TerminalApp.def" />
  </ItemGroup>

  <!-- ========================= Project References ======================== -->
  <ItemGroup>
    <!--
      the packaging project won't recurse through our dependencies, you have to
      make sure that if you add a cppwinrt dependency to any of these projects,
      you also update all the consumers
    -->
    <ProjectReference Include="$(OpenConsoleDir)src\types\lib\types.vcxproj">
      <Project>{18D09A24-8240-42D6-8CB6-236EEE820263}</Project>
    </ProjectReference>

    <!-- The midl compiler however, _will_ aggregate our winmd dependencies
    somehow. So make sure to only include top-level dependencies here (don't
    include Settings and Connection, since Control will include them for us) -->
    <ProjectReference Include="$(OpenConsoleDir)src\cascadia\TerminalSettings\TerminalSettings.vcxproj" />
    <ProjectReference Include="$(OpenConsoleDir)src\cascadia\TerminalControl\TerminalControl.vcxproj" />
    <ProjectReference Include="..\Microsoft.UI.Xaml.Markup\Microsoft.UI.Xaml.Markup.vcxproj" />

    <!-- Don't include a ProjectReference to TerminalAppLib here. If you do
    that, the midl compiler will get mad because it can't find
    TerminalAppLib.winmd (which TerminalAppLib doesn't build). -->
  </ItemGroup>

  <ItemGroup>
    <Reference Include="TerminalApp">
      <HintPath>$(OpenConsoleDir)$(Platform)\$(Configuration)\TerminalAppLib\TerminalApp.winmd</HintPath>
      <IsWinMDFile>true</IsWinMDFile>
      <!-- <Private>false</Private> -->
      <CopyLocalSatelliteAssemblies>true</CopyLocalSatelliteAssemblies>
      <!-- <Private>false</Private> -->
      <!-- <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies> -->
    </Reference>
  </ItemGroup>

  <PropertyGroup>
    <!--
      DON'T REDIRECT OUR OUTPUT.
      Setting this will tell cppwinrt.build.post.props to copy our output from
      the default OutDir up one level, so the wapproj will be able to find it.
     -->
    <NoOutputRedirection>true</NoOutputRedirection>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <Link>
      <!-- Manually link with the TerminalAppLib.lib we've built. -->
      <AdditionalLibraryDirectories>$(OpenConsoleDir)\$(Platform)\$(Configuration)\TerminalAppLib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>

      <AdditionalDependencies>TerminalAppLib.lib;WindowsApp.lib;shell32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <Import Project="$(OpenConsoleDir)src\common.build.post.props" />

  <Import Project="$(OpenConsoleDir)src\cppwinrt.build.post.props" />
  <Import Project="..\..\..\packages\Microsoft.UI.Xaml.2.1.190405001-prerelease\build\native\Microsoft.UI.Xaml.targets" Condition="Exists('..\..\..\packages\Microsoft.UI.Xaml.2.1.190405001-prerelease\build\native\Microsoft.UI.Xaml.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\..\..\packages\Microsoft.UI.Xaml.2.1.190405001-prerelease\build\native\Microsoft.UI.Xaml.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\..\packages\Microsoft.UI.Xaml.2.1.190405001-prerelease\build\native\Microsoft.UI.Xaml.targets'))" />
  </Target>
</Project>
