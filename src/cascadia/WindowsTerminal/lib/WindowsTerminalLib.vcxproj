<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\..\packages\Microsoft.Toolkit.Win32.UI.XamlApplication.6.0.0-preview7\build\native\Microsoft.Toolkit.Win32.UI.XamlApplication.props" Condition="Exists('..\..\..\packages\Microsoft.Toolkit.Win32.UI.XamlApplication.6.0.0-preview7\build\native\Microsoft.Toolkit.Win32.UI.XamlApplication.props')" />

  <PropertyGroup Label="Globals">
    <ProjectGuid>{d9614fac-d9f0-4e19-9bfc-397ceab2b6a3}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>WindowsTerminalLib</RootNamespace>
    <ProjectName>WindowsTerminalLib</ProjectName>
    <TargetName>WindowsTerminalLib</TargetName>
    <SubSystem>Console</SubSystem>
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <OpenConsoleUniversalApp>true</OpenConsoleUniversalApp>
    <!-- IMPORTANT! Xaml Islands only works on >= 17709 -->
    <!-- IMPORTANT! cppwinrt.pre.props specifies 17134 -->
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <!-- DON'T REDIRECT OUR OUTPUT -->
    <NoOutputRedirection>true</NoOutputRedirection>
  </PropertyGroup>

  <Import Project="..\..\..\..\common.openconsole.props" Condition="'$(OpenConsoleDir)'==''" />
  <Import Project="$(OpenConsoleDir)src\cppwinrt.build.pre.props" />

  <ItemDefinitionGroup>
    <ClCompile>
      <!-- For CLI11: It uses dynamic_cast to cast types around, which depends
      on being compiled with RTTI (/GR). I don't know what kind of hit this has
      on us. -->
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
    </ClCompile>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup>
    <ClCompile>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalIncludeDirectories>$(OpenConsoleDir)\src\inc;$(OpenConsoleDir)\dep;$(OpenConsoleDir)\dep\Console;$(OpenConsoleDir)\dep\Win32K;$(OpenConsoleDir)\dep\gsl\include;%(AdditionalIncludeDirectories);</AdditionalIncludeDirectories>
    </ClCompile>
    <ClCompile>
      <!-- Manually include the generated TerminalCore header's path, because
           adding a project reference will confuse msbuild, because TerminalCore
           isn't a dll, it's a lib, and cppwinrt won't include a lib's header -->
      <!-- <AdditionalIncludeDirectories>..;"$(OpenConsoleDir)src\cascadia\TerminalCore\lib\Generated Files";%(AdditionalIncludeDirectories);</AdditionalIncludeDirectories> -->
    </ClCompile>
    <Link>
      <AdditionalDependencies>gdi32.lib;dwmapi.lib;Shcore.lib;UxTheme.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <PropertyGroup>
    <GenerateManifest>true</GenerateManifest>
    <EmbedManifest>true</EmbedManifest>
  </PropertyGroup>

  <!-- Source Files -->
  <ItemGroup>
    <ClInclude Include="..\pch.h" />
    <ClInclude Include="..\AppCommandline.h" />
  </ItemGroup>

  <ItemGroup>
    <ClCompile Include="..\pch.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="..\AppCommandline.cpp" />
  </ItemGroup>

  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>

  <!-- ========================= Project References ======================== -->
  <ItemGroup>
    <!-- Even though we do have proper recursive dependencies, we want to keep some of these here
         so that the AppX Manifest contains their activatable classes. -->
    <!-- <ProjectReference Include="$(OpenConsoleDir)src\cascadia\TerminalSettings\TerminalSettings.vcxproj" />
    <ProjectReference Include="$(OpenConsoleDir)src\cascadia\TerminalControl\TerminalControl.vcxproj" />
    <ProjectReference Include="$(OpenConsoleDir)src\cascadia\TerminalConnection\TerminalConnection.vcxproj" /> -->


    <!-- <ProjectReference Include="$(OpenConsoleDir)src\cascadia\TerminalApp\TerminalApp.vcxproj" /> -->
    <!-- <ProjectReference Include="$(OpenConsoleDir)\src\cascadia\TerminalApp\lib\TerminalAppLib.vcxproj" /> -->

    <ProjectReference Include="$(OpenConsoleDir)src\types\lib\types.vcxproj" />
  </ItemGroup>

  <PropertyGroup>
    <!-- A small helper for paths to the compiled cppwinrt projects -->
    <_BinRoot Condition="'$(Platform)' != 'Win32'">$(OpenConsoleDir)$(Platform)\$(Configuration)\</_BinRoot>
    <_BinRoot Condition="'$(Platform)' == 'Win32'">$(OpenConsoleDir)$(Configuration)\</_BinRoot>
  </PropertyGroup>
  <ItemGroup>
    <!-- Manually add references to each of our dependent winmds. Mark them as
    private=false and CopyLocalSatelliteAssemblies=false, so that we don't
    propogate them upwards (which can make referencing this project result in
    duplicate type definitions)-->

    <Reference Include="Microsoft.Terminal.Settings">
      <HintPath>$(_BinRoot)TerminalSettings\Microsoft.Terminal.Settings.winmd</HintPath>
      <IsWinMDFile>true</IsWinMDFile>
      <Private>true</Private>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
    </Reference>

    <Reference Include="TerminalApp">
      <HintPath>$(_BinRoot)TerminalApp\TerminalApp.winmd</HintPath>
      <IsWinMDFile>true</IsWinMDFile>
      <Private>true</Private>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
    </Reference>
  </ItemGroup>

<!-- Manually include MUX here, instead of importing its targets file. We need
  to reference its winmd, but very specifically with the
  CopyLocalSatelliteAssemblies and Private properties set to false, as to not
  have projects including us double-including MUX's .winmd. The following blob
  is taken straight from the MUX build targets, with the afformentioned
  changes.-->
  <PropertyGroup>
    <Native-Platform Condition="'$(Platform)' == 'Win32'">x86</Native-Platform>
    <Native-Platform Condition="'$(Platform)' != 'Win32'">$(Platform)</Native-Platform>
    <_MUXRoot>$(OpenConsoleDir)\packages\Microsoft.UI.Xaml.2.2.191021001-prerelease\</_MUXRoot>
    <_MUXAppRoot>$(OpenConsoleDir)\packages\Microsoft.Toolkit.Win32.UI.XamlApplication.6.0.0-preview7\</_MUXAppRoot>
  </PropertyGroup>
  <ItemGroup>
    <!-- Microsoft.UI.XAML -->
    <Reference Include="$(_MUXRoot)lib\uap10.0\Microsoft.UI.Xaml.winmd">
      <Implementation>Microsoft.UI.Xaml.dll</Implementation>
      <IsWinMDFile>true</IsWinMDFile>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
      <Private>true</Private>
    </Reference>
    <ReferenceCopyLocalPaths Include="$(_MUXRoot)runtimes\win10-$(Native-Platform)\native\Microsoft.UI.Xaml.dll" />
    <ReferenceCopyLocalPaths Include="$(_MUXRoot)runtimes\win10-$(Native-Platform)\native\Microsoft.UI.Xaml.pri" />

    <!-- Microsoft.UI.XAML.Application -->
    <Reference Include="$(_MUXAppRoot)lib\uap10.0\Microsoft.Toolkit.Win32.UI.XamlHost.winmd">
      <Implementation>Microsoft.Toolkit.Win32.UI.XamlHost.dll</Implementation>
      <IsWinMDFile>true</IsWinMDFile>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
      <Private>true</Private>
    </Reference>
    <ReferenceCopyLocalPaths Include="$(_MUXAppRoot)lib\uap10.0\Microsoft.Toolkit.Win32.UI.XamlHost.*" />
    <ReferenceCopyLocalPaths Include="$(_MUXAppRoot)runtimes\win10-$(Native-Platform)\native\Microsoft.Toolkit.Win32.UI.XamlHost.*" />
  </ItemGroup>
  <!-- End MUX import -->

  <PropertyGroup Label="Globals">
    <DebuggerFlavor>WindowsLocalDebugger</DebuggerFlavor>
  </PropertyGroup>

  <Import Project="$(OpenConsoleDir)src\cppwinrt.build.post.props" />

</Project>
